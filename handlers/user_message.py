import re

from aiogram import F, Router, Bot
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery

from filters.is_admin import AdminProtect
from filters.download import download
from filters.is_subscribe import subscription_check, subscription_check_cb

from database import insert_user

import keyboards.reply as rkb
import keyboards.inline as ikb
import keyboards.builder as bkb

from config import admin_us

user = Router()

@user.message(CommandStart())
async def start_command(message: Message):
    admin = AdminProtect()
    if not await admin(message):  # –î–æ–±–∞–≤–ª—è–µ–º await –∑–¥–µ—Å—å
        await message.answer(f"–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ TikTok.\n"
                             f"–†–µ–∫–ª–∞–º–∞/–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ø–æ–Ω—Å–æ—Ä–æ–≤ - @{admin_us}",
                             reply_markup=ikb.feedback)
        await insert_user(message.from_user.id, message.from_user.username)
    else:
        await message.answer(f"–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ TikTok.\n"
                             f"–†–µ–∫–ª–∞–º–∞/–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ø–æ–Ω—Å–æ—Ä–æ–≤ - @{admin_us}",
                             reply_markup=ikb.feedback)
        await insert_user(message.from_user.id, message.from_user.username)
        await message.answer(f"–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!",
                             reply_markup=rkb.admin_menu)


@user.message()
async def download_video(message: Message, bot):
    if not await subscription_check(message, bot):
        return  # Exit if the user is not subscribed

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Å—Å—ã–ª–∫–∏
    if re.match(r'https://[a-zA-Z]+\.tiktok\.com/', message.text):
        m = await message.reply('–û–∂–∏–¥–∞–π—Ç–µ..')
        video_url = download(message.text)
        if video_url:
            await bot.delete_message(message.chat.id, m.message_id)
            await message.answer_video(video_url,
                                       caption='–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –Ω–∞—à–∏–º –±–æ—Ç–æ–º! üôè')
        else:
            await bot.delete_message(message.chat.id, m.message_id)
            await message.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤–∏–¥–µ–æ.')
    else:
        await message.reply('–°—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ TikTok.')

@user.callback_query(F.data == 'check_subscription')
async def check_subscription(callback: CallbackQuery, bot: Bot):
    await callback.message.delete()
    if not await subscription_check_cb(callback, bot):
        return  # Exit if the user is not subscribed

    await callback.message.answer('–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É!\n'
                                  '–¢–µ–ø–µ—Ä—å –≤–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞ üéâ')








